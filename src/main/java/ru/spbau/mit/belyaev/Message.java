// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

package ru.spbau.mit.belyaev;

public final class Message {
  private Message() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface QueryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ru.spbau.mit.belyaev.Query)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required fixed32 count = 1;</code>
     */
    boolean hasCount();
    /**
     * <code>required fixed32 count = 1;</code>
     */
    int getCount();

    /**
     * <code>repeated fixed32 num = 2 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getNumList();
    /**
     * <code>repeated fixed32 num = 2 [packed = true];</code>
     */
    int getNumCount();
    /**
     * <code>repeated fixed32 num = 2 [packed = true];</code>
     */
    int getNum(int index);
  }
  /**
   * Protobuf type {@code ru.spbau.mit.belyaev.Query}
   */
  public static final class Query extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ru.spbau.mit.belyaev.Query)
      QueryOrBuilder {
    // Use Query.newBuilder() to construct.
    private Query(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Query(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Query defaultInstance;
    public static Query getDefaultInstance() {
      return defaultInstance;
    }

    public Query getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Query(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              count_ = input.readFixed32();
              break;
            }
            case 21: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                num_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              num_.add(input.readFixed32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                num_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                num_.add(input.readFixed32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          num_ = java.util.Collections.unmodifiableList(num_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ru.spbau.mit.belyaev.Message.internal_static_ru_spbau_mit_belyaev_Query_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ru.spbau.mit.belyaev.Message.internal_static_ru_spbau_mit_belyaev_Query_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ru.spbau.mit.belyaev.Message.Query.class, ru.spbau.mit.belyaev.Message.Query.Builder.class);
    }

    public static com.google.protobuf.Parser<Query> PARSER =
        new com.google.protobuf.AbstractParser<Query>() {
      public Query parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Query(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Query> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int COUNT_FIELD_NUMBER = 1;
    private int count_;
    /**
     * <code>required fixed32 count = 1;</code>
     */
    public boolean hasCount() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required fixed32 count = 1;</code>
     */
    public int getCount() {
      return count_;
    }

    public static final int NUM_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> num_;
    /**
     * <code>repeated fixed32 num = 2 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getNumList() {
      return num_;
    }
    /**
     * <code>repeated fixed32 num = 2 [packed = true];</code>
     */
    public int getNumCount() {
      return num_.size();
    }
    /**
     * <code>repeated fixed32 num = 2 [packed = true];</code>
     */
    public int getNum(int index) {
      return num_.get(index);
    }
    private int numMemoizedSerializedSize = -1;

    private void initFields() {
      count_ = 0;
      num_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFixed32(1, count_);
      }
      if (getNumList().size() > 0) {
        output.writeRawVarint32(18);
        output.writeRawVarint32(numMemoizedSerializedSize);
      }
      for (int i = 0; i < num_.size(); i++) {
        output.writeFixed32NoTag(num_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, count_);
      }
      {
        int dataSize = 0;
        dataSize = 4 * getNumList().size();
        size += dataSize;
        if (!getNumList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        numMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static ru.spbau.mit.belyaev.Message.Query parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.spbau.mit.belyaev.Message.Query parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.spbau.mit.belyaev.Message.Query parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.spbau.mit.belyaev.Message.Query parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.spbau.mit.belyaev.Message.Query parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.spbau.mit.belyaev.Message.Query parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static ru.spbau.mit.belyaev.Message.Query parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static ru.spbau.mit.belyaev.Message.Query parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static ru.spbau.mit.belyaev.Message.Query parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.spbau.mit.belyaev.Message.Query parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ru.spbau.mit.belyaev.Message.Query prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ru.spbau.mit.belyaev.Query}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ru.spbau.mit.belyaev.Query)
        ru.spbau.mit.belyaev.Message.QueryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ru.spbau.mit.belyaev.Message.internal_static_ru_spbau_mit_belyaev_Query_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ru.spbau.mit.belyaev.Message.internal_static_ru_spbau_mit_belyaev_Query_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ru.spbau.mit.belyaev.Message.Query.class, ru.spbau.mit.belyaev.Message.Query.Builder.class);
      }

      // Construct using ru.spbau.mit.belyaev.Message.Query.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        count_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        num_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ru.spbau.mit.belyaev.Message.internal_static_ru_spbau_mit_belyaev_Query_descriptor;
      }

      public ru.spbau.mit.belyaev.Message.Query getDefaultInstanceForType() {
        return ru.spbau.mit.belyaev.Message.Query.getDefaultInstance();
      }

      public ru.spbau.mit.belyaev.Message.Query build() {
        ru.spbau.mit.belyaev.Message.Query result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ru.spbau.mit.belyaev.Message.Query buildPartial() {
        ru.spbau.mit.belyaev.Message.Query result = new ru.spbau.mit.belyaev.Message.Query(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.count_ = count_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          num_ = java.util.Collections.unmodifiableList(num_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.num_ = num_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ru.spbau.mit.belyaev.Message.Query) {
          return mergeFrom((ru.spbau.mit.belyaev.Message.Query)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ru.spbau.mit.belyaev.Message.Query other) {
        if (other == ru.spbau.mit.belyaev.Message.Query.getDefaultInstance()) return this;
        if (other.hasCount()) {
          setCount(other.getCount());
        }
        if (!other.num_.isEmpty()) {
          if (num_.isEmpty()) {
            num_ = other.num_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureNumIsMutable();
            num_.addAll(other.num_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCount()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ru.spbau.mit.belyaev.Message.Query parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ru.spbau.mit.belyaev.Message.Query) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int count_ ;
      /**
       * <code>required fixed32 count = 1;</code>
       */
      public boolean hasCount() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required fixed32 count = 1;</code>
       */
      public int getCount() {
        return count_;
      }
      /**
       * <code>required fixed32 count = 1;</code>
       */
      public Builder setCount(int value) {
        bitField0_ |= 0x00000001;
        count_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed32 count = 1;</code>
       */
      public Builder clearCount() {
        bitField0_ = (bitField0_ & ~0x00000001);
        count_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> num_ = java.util.Collections.emptyList();
      private void ensureNumIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          num_ = new java.util.ArrayList<java.lang.Integer>(num_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated fixed32 num = 2 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getNumList() {
        return java.util.Collections.unmodifiableList(num_);
      }
      /**
       * <code>repeated fixed32 num = 2 [packed = true];</code>
       */
      public int getNumCount() {
        return num_.size();
      }
      /**
       * <code>repeated fixed32 num = 2 [packed = true];</code>
       */
      public int getNum(int index) {
        return num_.get(index);
      }
      /**
       * <code>repeated fixed32 num = 2 [packed = true];</code>
       */
      public Builder setNum(
          int index, int value) {
        ensureNumIsMutable();
        num_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed32 num = 2 [packed = true];</code>
       */
      public Builder addNum(int value) {
        ensureNumIsMutable();
        num_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed32 num = 2 [packed = true];</code>
       */
      public Builder addAllNum(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureNumIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, num_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed32 num = 2 [packed = true];</code>
       */
      public Builder clearNum() {
        num_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ru.spbau.mit.belyaev.Query)
    }

    static {
      defaultInstance = new Query(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ru.spbau.mit.belyaev.Query)
  }

  public interface AnswerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ru.spbau.mit.belyaev.Answer)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required fixed32 count = 1;</code>
     */
    boolean hasCount();
    /**
     * <code>required fixed32 count = 1;</code>
     */
    int getCount();

    /**
     * <code>repeated fixed32 num = 2 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getNumList();
    /**
     * <code>repeated fixed32 num = 2 [packed = true];</code>
     */
    int getNumCount();
    /**
     * <code>repeated fixed32 num = 2 [packed = true];</code>
     */
    int getNum(int index);
  }
  /**
   * Protobuf type {@code ru.spbau.mit.belyaev.Answer}
   */
  public static final class Answer extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ru.spbau.mit.belyaev.Answer)
      AnswerOrBuilder {
    // Use Answer.newBuilder() to construct.
    private Answer(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Answer(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Answer defaultInstance;
    public static Answer getDefaultInstance() {
      return defaultInstance;
    }

    public Answer getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Answer(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              count_ = input.readFixed32();
              break;
            }
            case 21: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                num_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              num_.add(input.readFixed32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                num_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                num_.add(input.readFixed32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          num_ = java.util.Collections.unmodifiableList(num_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ru.spbau.mit.belyaev.Message.internal_static_ru_spbau_mit_belyaev_Answer_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ru.spbau.mit.belyaev.Message.internal_static_ru_spbau_mit_belyaev_Answer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ru.spbau.mit.belyaev.Message.Answer.class, ru.spbau.mit.belyaev.Message.Answer.Builder.class);
    }

    public static com.google.protobuf.Parser<Answer> PARSER =
        new com.google.protobuf.AbstractParser<Answer>() {
      public Answer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Answer(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Answer> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int COUNT_FIELD_NUMBER = 1;
    private int count_;
    /**
     * <code>required fixed32 count = 1;</code>
     */
    public boolean hasCount() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required fixed32 count = 1;</code>
     */
    public int getCount() {
      return count_;
    }

    public static final int NUM_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> num_;
    /**
     * <code>repeated fixed32 num = 2 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getNumList() {
      return num_;
    }
    /**
     * <code>repeated fixed32 num = 2 [packed = true];</code>
     */
    public int getNumCount() {
      return num_.size();
    }
    /**
     * <code>repeated fixed32 num = 2 [packed = true];</code>
     */
    public int getNum(int index) {
      return num_.get(index);
    }
    private int numMemoizedSerializedSize = -1;

    private void initFields() {
      count_ = 0;
      num_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFixed32(1, count_);
      }
      if (getNumList().size() > 0) {
        output.writeRawVarint32(18);
        output.writeRawVarint32(numMemoizedSerializedSize);
      }
      for (int i = 0; i < num_.size(); i++) {
        output.writeFixed32NoTag(num_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, count_);
      }
      {
        int dataSize = 0;
        dataSize = 4 * getNumList().size();
        size += dataSize;
        if (!getNumList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        numMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static ru.spbau.mit.belyaev.Message.Answer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.spbau.mit.belyaev.Message.Answer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.spbau.mit.belyaev.Message.Answer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.spbau.mit.belyaev.Message.Answer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.spbau.mit.belyaev.Message.Answer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.spbau.mit.belyaev.Message.Answer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static ru.spbau.mit.belyaev.Message.Answer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static ru.spbau.mit.belyaev.Message.Answer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static ru.spbau.mit.belyaev.Message.Answer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.spbau.mit.belyaev.Message.Answer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ru.spbau.mit.belyaev.Message.Answer prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ru.spbau.mit.belyaev.Answer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ru.spbau.mit.belyaev.Answer)
        ru.spbau.mit.belyaev.Message.AnswerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ru.spbau.mit.belyaev.Message.internal_static_ru_spbau_mit_belyaev_Answer_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ru.spbau.mit.belyaev.Message.internal_static_ru_spbau_mit_belyaev_Answer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ru.spbau.mit.belyaev.Message.Answer.class, ru.spbau.mit.belyaev.Message.Answer.Builder.class);
      }

      // Construct using ru.spbau.mit.belyaev.Message.Answer.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        count_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        num_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ru.spbau.mit.belyaev.Message.internal_static_ru_spbau_mit_belyaev_Answer_descriptor;
      }

      public ru.spbau.mit.belyaev.Message.Answer getDefaultInstanceForType() {
        return ru.spbau.mit.belyaev.Message.Answer.getDefaultInstance();
      }

      public ru.spbau.mit.belyaev.Message.Answer build() {
        ru.spbau.mit.belyaev.Message.Answer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ru.spbau.mit.belyaev.Message.Answer buildPartial() {
        ru.spbau.mit.belyaev.Message.Answer result = new ru.spbau.mit.belyaev.Message.Answer(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.count_ = count_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          num_ = java.util.Collections.unmodifiableList(num_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.num_ = num_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ru.spbau.mit.belyaev.Message.Answer) {
          return mergeFrom((ru.spbau.mit.belyaev.Message.Answer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ru.spbau.mit.belyaev.Message.Answer other) {
        if (other == ru.spbau.mit.belyaev.Message.Answer.getDefaultInstance()) return this;
        if (other.hasCount()) {
          setCount(other.getCount());
        }
        if (!other.num_.isEmpty()) {
          if (num_.isEmpty()) {
            num_ = other.num_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureNumIsMutable();
            num_.addAll(other.num_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCount()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ru.spbau.mit.belyaev.Message.Answer parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ru.spbau.mit.belyaev.Message.Answer) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int count_ ;
      /**
       * <code>required fixed32 count = 1;</code>
       */
      public boolean hasCount() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required fixed32 count = 1;</code>
       */
      public int getCount() {
        return count_;
      }
      /**
       * <code>required fixed32 count = 1;</code>
       */
      public Builder setCount(int value) {
        bitField0_ |= 0x00000001;
        count_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed32 count = 1;</code>
       */
      public Builder clearCount() {
        bitField0_ = (bitField0_ & ~0x00000001);
        count_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> num_ = java.util.Collections.emptyList();
      private void ensureNumIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          num_ = new java.util.ArrayList<java.lang.Integer>(num_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated fixed32 num = 2 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getNumList() {
        return java.util.Collections.unmodifiableList(num_);
      }
      /**
       * <code>repeated fixed32 num = 2 [packed = true];</code>
       */
      public int getNumCount() {
        return num_.size();
      }
      /**
       * <code>repeated fixed32 num = 2 [packed = true];</code>
       */
      public int getNum(int index) {
        return num_.get(index);
      }
      /**
       * <code>repeated fixed32 num = 2 [packed = true];</code>
       */
      public Builder setNum(
          int index, int value) {
        ensureNumIsMutable();
        num_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed32 num = 2 [packed = true];</code>
       */
      public Builder addNum(int value) {
        ensureNumIsMutable();
        num_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed32 num = 2 [packed = true];</code>
       */
      public Builder addAllNum(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureNumIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, num_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed32 num = 2 [packed = true];</code>
       */
      public Builder clearNum() {
        num_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ru.spbau.mit.belyaev.Answer)
    }

    static {
      defaultInstance = new Answer(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ru.spbau.mit.belyaev.Answer)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ru_spbau_mit_belyaev_Query_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ru_spbau_mit_belyaev_Query_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ru_spbau_mit_belyaev_Answer_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ru_spbau_mit_belyaev_Answer_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rmessage.proto\022\024ru.spbau.mit.belyaev\"\'\n" +
      "\005Query\022\r\n\005count\030\001 \002(\007\022\017\n\003num\030\002 \003(\007B\002\020\001\"(" +
      "\n\006Answer\022\r\n\005count\030\001 \002(\007\022\017\n\003num\030\002 \003(\007B\002\020\001" +
      "B\037\n\024ru.spbau.mit.belyaevB\007Message"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_ru_spbau_mit_belyaev_Query_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_ru_spbau_mit_belyaev_Query_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ru_spbau_mit_belyaev_Query_descriptor,
        new java.lang.String[] { "Count", "Num", });
    internal_static_ru_spbau_mit_belyaev_Answer_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_ru_spbau_mit_belyaev_Answer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ru_spbau_mit_belyaev_Answer_descriptor,
        new java.lang.String[] { "Count", "Num", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
